# content of pyproject.toml
[build-system]
requires = ["setuptools>=64.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "anta_custom"
version = "v0.0.1"
readme = "README.md"
authors = [{ name = "Thomas Grimonet", email = "thomas.grimonet@gmail.com" }]
maintainers = [
  { name = "Thomas Grimonet", email = "thomas.grimonet@gmail.com" },
]
description = "A custom lib of ANTA tests"
license = { file = "LICENSE" }
dependencies = [
  "anta>=0.11.0",
  "eos-downloader==0.8.2"
]
keywords = ["test", "anta", "Arista", "network", "automation", "networking", "devops", "netdevops"]
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Information Technology",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Testing",
    "Topic :: System :: Networking",
]
requires-python = ">=3.8"

[project.optional-dependencies]
dev = [
  "bumpver==2023.1126",
  "black==23.7.0",
  "flake8==6.1.0",
  "isort==5.12.0",
  "mypy~=1.4",
  "mypy-extensions~=1.0",
  "pre-commit>=3.3.3",
  "pylint>=2.17.5",
  "ruff>=0.0.280",
  "pytest>=7.4.0",
  "pytest-asyncio>=0.21.1",
  "pytest-cov>=4.1.0",
  "pytest-dependency",
  "pytest-html>=3.2.0",
  "pytest-metadata>=3.0.0",
  "pylint-pydantic>=0.2.4",
  "tox==4.9.0",
  "types-PyYAML",
  "types-paramiko",
  "types-requests",
  "typing-extensions",
  "yamllint>=1.32.0",
]

[project.urls]
Homepage = "https://www.anta.ninja"
"Bug Tracker" = "https://github.com/arista-netdevops-community/anta/issues"
Contributing = "https://www.anta.ninja/main/contribution/"


################################
# Tools
################################
[tool.setuptools.packages.find]
include = ["anta_custom*"]
namespaces = false

################################
# Linting
################################
[tool.isort]
profile = "black"
line_length = 165

[tool.black]
line-length = 165
force-exclude = """
(
.*data.py|
)
"""

################################
# Typing
# mypy as per https://pydantic-docs.helpmanual.io/mypy_plugin/#enabling-the-plugin
################################
[tool.mypy]
plugins = [
  "pydantic.mypy",
  ]
# Comment below for better type checking
#follow_imports = "skip"
ignore_missing_imports = true
warn_redundant_casts = true
# Note: tox find some unused type ignore which are required for pre-commit
# To investigate
# warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
strict_optional = true

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = true

mypy_path = "anta_custom"

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true


################################
# Tox
################################
[tool.tox]
legacy_tox_ini = """
[tox]
min_version = 4.0
envlist =
  clean,
  lint,
  type

[testenv]
description = Run pytest with {basepython}
extras = dev
commands =
   pytest

[testenv:lint]
description = Check the code style
commands =
  black --check --diff --color .
  isort --check --diff --color .
  flake8 --max-line-length=165 --config=/dev/null anta_custom
  pylint anta_custom

[testenv:type]
description = Check typing
commands =
  type: mypy --config-file=pyproject.toml anta

[testenv:clean]
description = Erase previous coverage reports
deps = coverage[toml]
skip_install = true
commands = coverage erase
"""

